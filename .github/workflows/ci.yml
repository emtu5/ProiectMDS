name: Proiect MDS CI
on:
    push:
        branches: [ main ]
        tags:
            - v*
    pull_request:
        branches: [ main ]
    workflow_dispatch:

permissions:
    contents: write

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Build Game
              id: build_game
              uses: firebelley/godot-export@v5.2.0
              with:
                godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_mono_linux_x86_64.zip
                godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.2.2-stable/Godot_v4.2.2-stable_export_templates.tpz
                relative_project_path: "./"
                relative_export_path: "./"
                cache: true
                export_debug: false

            - name: Save Artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: build_game
                  if-no-files-found: error
                  path: |
                    ./LinuxX11
                    ./Windows Desktop

    linter:
        name: GDLint Check
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Load Python Cache
              id: cache-python
              uses: actions/cache@v2
              with:
                path: ./.venv/
                key: ${{ runner.os }}-python-${{ hashFiles('**/linter_requirements.txt') }}

            - name: Build Python venv
              run: |
                python -m venv ./.venv
                source ./.venv/bin/activate
                pip install -r linter_requirements.txt
              if: steps.cache-python.outputs.cache-hit != 'true'

            - name: Lint
              run: |
                source ./.venv/bin/activate
                gdlint . > lint_report.txt

            - name: Upload Lint Report
              uses: actions/upload-artifact@v4
              with:
                  name: lint_report
                  path: lint_report.txt

            - name: Check Lint Report
              run: |
                if grep -q "Error" lint_report.txt; then
                    echo "Lint failed"
                    exit 1
                fi

    upload_release:
        name: Upload Release
        runs-on: ubuntu-latest
        needs: [build, linter]
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

        steps:
            - name: Download Artifacts
              uses: actions/download-artifact@v4
              with:
                name: build_game

            - name: Create Release
              uses: softprops/action-gh-release@v2
              with:
                files: |
                    ./LinuxX11/Proiect Mds.x86_64
                    ./Windows Desktop/Proiect Mds.exe
                body: Release for tag ${{ github.ref }}
                fail_on_unmatched_files: true
